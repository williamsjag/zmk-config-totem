//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
       

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE 0
#define NUM  1
#define SYM  2
#define EXT  3


&mt {
  quick-tap-ms = <100>;
  global-quick-tap;
  flavor = "balanced";
  tapping-term-ms = <170>;
};

/ {
     custom_shift {
            dotcol: dot_colon {
                compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&kp DOT>, <&kp COLON>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
            };
            commasemi: comma_semi {
                compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&kp COMMA>, <&kp SEMI>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
            };
            hashdol: hash_dollar {
                compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&kp HASH>, <&kp DOLLAR>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
            };
            slashstar: slash_star {
                compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&kp SLASH>, <&kp STAR>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
            };
            dqtlbkt: dqt_lbkt {
                compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&kp DQT>, <&kp LBKT>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
            };
            sqtrbkt: sqt_rbkt {
                compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&kp SQT>, <&kp RBKT>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
            };
            minusplus: minus_plus {
                compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&kp MINUS>, <&kp PLUS>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
            };
            eqnoteq: eqnoteq {
                compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&kp EQUAL>, <&notequal>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
            };
            uname: uname {
                compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&username>, <&email>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
            };
            name: name {
                compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&firstname>, <&lastname>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
            };
            currency: currency {
                compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&kp DOLLAR>, <&kp LA(LS(N2))>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
            };
            less: less {
                compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&kp LT>, <&lessequal>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
            };
            greater: greater {
                compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&kp GT>, <&greaterequal>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
            };
            gravetab: gravetab {
                compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&kp TAB>, <&kp GRAVE>;
                mods = <(MOD_LGUI|MOD_RGUI) (MOD_LALT|MOD_RALT)>;
                keep-mods = <(MOD_LGUI|MOD_RGUI)>;
            };
     };
     custom_behaviors {
            hrl: home_row_mod_left {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                flavor = "balanced";
                require-prior-idle-ms = <150>;
                tapping-term-ms = <280>;
                quick-tap-ms = <175>;
                bindings = <&kp>, <&kp>;
                hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 26 27 28 29 30 31 35 36 37>;
                hold-trigger-on-release;
            };
            hrr: home_row_mod_right {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                flavor = "balanced";
                require-prior-idle-ms = <150>;
                tapping-term-ms = <280>;
                quick-tap-ms = <175>;
                bindings = <&kp>, <&kp>;
                hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 25 32 33 34>;
                hold-trigger-on-release;
            };
            lk_QU: linger_key_QU {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                bindings = <&kp>, <&qu>;
                tapping-term-ms = <135>;
                quick-tap-ms = <0>;
                flavor = "tap-preferred";
            };
     };
//             ┏━━━┳━━━┳━━━┳━━━┳━━━┓   ┏━━━┳━━━┳━━━┳━━━┳━━━┓
//             ┃ 0 ┃ 1 ┃ 2 ┃ 3 ┃ 4 ┃   ┃ 5 ┃ 6 ┃ 7 ┃ 8 ┃ 9 ┃
//             ┣━━━╋━━━╋━━━╋━━━╋━━━┫   ┣━━━╋━━━╋━━━╋━━━╋━━━┫
//             ┃ 10┃ 11┃ 12┃ 13┃ 14┃   ┃ 15┃ 16┃ 17┃ 18┃ 19┃
//         ┏━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫   ┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━┓
//         ┃ 20┃ 21┃ 22┃ 23┃ 24┃ 25┃   ┃ 26┃ 27┃ 28┃ 29┃ 30┃ 31┃
//         ┗━━━┻━━━┻━━━╋━━━╋━━━╋━━━┫   ┣━━━╋━━━╋━━━╋━━━┻━━━┻━━━┛
//                     ┃ 32┃ 33┃ 34┃   ┃ 35┃ 36┃ 37┃
//                     ┗━━━┻━━━┻━━━┛   ┗━━━┻━━━┻━━━┛
     combos {
            compatible = "zmk,combos";
            combo_caps {
                timeout-ms = <50>;
                key-positions = <13 16>;
                bindings = <&caps_word>;
            };
            combo_pipe {
                timeout-ms = <50>;
                key-positions = <16 17>;
                bindings = <&kp PIPE>;
            };
            combo_esc {
                timeout-ms = <50>;
                key-positions = <0 1>;
                bindings = <&kp ESC>;
            };
           combo_th {
                timeout-ms = <50>;
                key-positions = <12 13>;
                bindings = <&th>;
           };
           combo_sh {
                timeout-ms = <50>;
                key-positions = <11 13>;
                bindings = <&sh>;
           };
           combo_ch {
                timeout-ms = <50>;
                key-positions = <11 12>;
                bindings = <&ch>;
           };
           combo_tch {
                timeout-ms = <50>;
                key-positions = <11 12 13>;
                bindings = <&tch>;
           };
           combo_sch {
                timeout-ms = <50>;
                key-positions = <10 11 12>;
                bindings = <&sch>;
           };
           combo_gh {
                timeout-ms = <50>;
                key-positions = <2 3>;
                bindings = <&gh>;
           };
           combo_wh {
                timeout-ms = <50>;
                key-positions = <1 2>;
                bindings = <&wh>;
           };
           combo_ph {
                timeout-ms = <50>;
                key-positions = <22 23>;
                bindings = <&ph>;
           };
           combo_reset {
                timeout-ms = <50>;
                layers = <3>;
                key-positions = <20 31>;
                bindings = <&sys_reset>;
           };
           combo_scap {
                timeout-ms = <50>;
                key-positions = <16 18>;
                bindings = <&kp LG(LS(N4))>;
           };
           combo_exclaim {
                timeout-ms = <50>;
                key-positions = <6 7>;
                bindings = <&kp EXCL>;
           };
           combo_question {
                timeout-ms = <50>;
                key-positions = <7 8>;
                bindings = <&kp QUESTION>;
           };
           combo_guillemet {
                timeout-ms = <50>;
                key-positions = <8 9>;
                bindings = <&guillemet>;
           };
           combo_dotcom {
                timeout-ms = <50>;
                key-positions = <27 28>;
                bindings = <&dotcom>;
           };
           combo_dotfr {
                timeout-ms = <50>;
                key-positions = <28 29>;
                bindings = <&dotfr>;
           };
           combo_gmail {
                timeout-ms = <50>;
                key-positions = <27 28 29>;
                bindings = <&gmail>;
           };
           combo_stickshift {
                timeout-ms = <50>;
                key-positions = <12 17>;
                bindings = <&sk LSHIFT>;
           };
    };

    macros {
        th: th {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp H>;
        };
        sh: sh {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp H>;
        };
        ch: ch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp H>;
        };
        wh: wh {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp W &kp H>;
        };
        ph: ph {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp H>;
        };
        gh: gh {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp G &kp H>;
        };
        tch: tch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp C &kp H>;
        };
        sch: sch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp C &kp H>;
        };
        qu: qu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Q &kp U>;
        };
        backdir: backdir {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOT &kp DOT &kp SLASH>;
        };
        notequal: notequal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EXCL &kp EQUAL>;
        };
        lessequal: lessequal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LT &kp EQUAL>;
        };
        greaterequal: greaterequal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GT &kp EQUAL>;
        };
        username: username {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp W &kp I &kp L &kp L &kp I &kp A &kp M &kp S &kp J &kp A &kp G>;
        };
        email: email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&username &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
        };
        firstname: firstname {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp J &kp A &kp C &kp K &kp S &kp O &kp N>;
        };
        lastname: lastname {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&firstname &kp SPACE &kp W &kp I &kp L &kp L &kp I &kp A &kp M &kp S>;
        };
        guillemet: guillemet {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(BACKSLASH) &kp SPACE &kp SPACE &kp LA(LS(BACKSLASH)) &kp LEFT &kp LEFT>;
        };
        dotcom: dotcom {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOT &kp C &kp O &kp M>;
        };
        dotfr: dotfr {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOT &kp F &kp R>;
        };
        gmail: gmail {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
        };
        selline: selline {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp LC(LS(E))>;
        };
        selword: selword {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LEFT) &kp LA(LS(RIGHT))>;
        };
        gif: gif {
            compatible = "zmk,behavior-macro";
            label = "giphy";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_tap &kp N2>
                , <&macro_release &kp LSHFT>
                , <&macro_tap &kp G &kp I &kp F>
                ;
        };
    };

        keymap {
                compatible = "zmk,keymap";
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

                base_layer {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
label= "HD Vibranium F"                    ;
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
//             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
//             ┃     X     ┃     W     ┃     M     ┃     G     ┃     J     ┃   ┃     #     ┃     .     ┃     /     ┃     "     ┃     '     ┃
//             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
//             ┃     S     ┃     C     ┃     N     ┃     T     ┃     K     ┃   ┃     ,     ┃     A     ┃     E     ┃     I     ┃     H     ┃
// ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
// ┃     QU    ┃     F     ┃     P     ┃     L     ┃     D     ┃     V     ┃   ┃     -     ┃     U     ┃     O     ┃     Y     ┃     B     ┃     Z     ┃
// ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
//                                     ┃    BSCP   ┃     R     ┃    NUM    ┃   ┃    SYM    ┃    SPC    ┃  RETURN   ┃
//                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
 bindings = <
// ╷           ╷           ╷           ╷           ╷           ╷           ╷   ╷           ╷           ╷           ╷           ╷           ╷           ╷

                &kp X       &kp W       &kp M       &kp G       &kp J           &hashdol    &dotcol     &slashstar  &dqtlbkt    &sqtrbkt
               &hrl LCTRL S &hrl LALT C &hrl LGUI N &hrl LSHFT T &kp K          &commasemi &hrr RSHFT A &hrr RGUI E &hrr RALT I &hrr RCTRL H
    &lk_QU Q 0  &kp F       &kp P       &kp L       &kp D       &kp V           &minusplus  &kp U       &kp O       &kp Y       &kp B       &kp Z
                                        &kp BSPC    &kp R      &lt NUM X &lt SYM ESC &kp SPACE   &kp RETURN
                        >;
                };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄


                nav_layer {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
label= "NUM"                               ;
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
//             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
//             ┃    TAB    ┃   HOME    ┃     UP    ┃    END    ┃ SCROLL UP ┃   ┃     /     ┃     7     ┃     8     ┃     9     ┃     -     ┃
//             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
//             ┃           ┃   LEFT    ┃    DOWN   ┃   RIGHT   ┃ SCROLL DN ┃   ┃     *     ┃     4     ┃     5     ┃     6     ┃     +     ┃
// ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
// ┃   RESET   ┃   UNDO    ┃   CUT     ┃    COPY   ┃   PASTE   ┃ PASTEMTCH ┃   ┃     ,     ┃     1     ┃     2     ┃     3     ┃     =     ┃           ┃
// ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
//                                     ┃           ┃           ┃  XXXXXXX  ┃   ┃    EXT    ┃     0     ┃     .     ┃
//                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
 bindings = <
// ╷           ╷           ╷           ╷           ╷           ╷           ╷   ╷           ╷           ╷           ╷           ╷           ╷           ╷

                &kp TAB     &kp HOME    &kp UP      &kp END     &msc SCRL_DOWN   &kp SLASH      &kp N7      &kp N8      &kp N9      &kp MINUS
                &none       &kp LEFT    &kp DOWN    &kp RIGHT   &msc SCRL_UP    &hrr RSHFT STAR &hrr RGUI N4 &hrr RALT N5 &hrr RCTRL N6 &kp PLUS
    &bootloader &kp LG(Z)   &kp LG(X)   &kp LG(C)   &kp LG(V)  &kp LG(LA(LS(V))) &kp COMMA      &kp N1      &kp N2      &kp N3      &kp EQUAL      &kp BSPC
                                        &trans      &trans      &trans           &mo EXT        &kp N0      &kp DOT
                        >;
                };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄


                sym_layer {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
label= "SYM"                               ;
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
//             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
//             ┃     `     ┃     ^     ┃     [     ┃     ]     ┃     #     ┃   ┃    ../    ┃     ?     ┃     $     ┃     %     ┃   EMOJI   ┃
//             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
//             ┃     <     ┃     >     ┃     (     ┃     )     ┃     _     ┃   ┃     :     ┃     ;     ┃     =     ┃     &     ┃   UNAME   ┃
// ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
// ┃           ┃           ┃     !     ┃     {     ┃     }     ┃     ,     ┃   ┃     .     ┃     ~     ┃     -     ┃     @     ┃   NAME    ┃    RESET  ┃
// ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
//                                     ┃     \     ┃   SPACE   ┃    EXT    ┃   ┃  XXXXXXX  ┃           ┃           ┃
//                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
 bindings = <
// ╷           ╷           ╷           ╷           ╷           ╷           ╷   ╷           ╷           ╷           ╷           ╷           ╷           ╷

                &kp GRAVE   &kp CARET   &kp LBKT    &kp RBKT    &kp HASH        &backdir    &kp QMARK     &currency   &kp PERCENT  &kp LC(LG(SPACE))
                &less       &greater    &kp LPAR    &hrl LSHFT RPAR &kp UNDER   &kp COLON &hrr RSHFT SEMI &eqnoteq    &kp AMPS     &uname
    &trans      &none       &kp EXCL    &kp LBRC    &kp RBRC    &commasemi      &kp DOT     &kp TILDE     &minusplus  &kp AT       &name   &bootloader
                                        &kp BSLH    &kp SPACE   &mo EXT         &trans      &trans        &trans
                        >;
                };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄


                adjust_layer {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
label= "EXT"                               ;
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
//             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
//             ┃   WL 1/4  ┃  WL 1/2   ┃   WC 1/2  ┃  WR 1/2   ┃   WR 1/4  ┃   ┃ DOC START ┃  L CLICK  ┃   MS UP   ┃  R CLICK  ┃   DEFINE  ┃
//             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
//             ┃ PREV TAB  ┃ NEXT TAB  ┃ BRWS BACK ┃ BRWS FWD  ┃    GPT    ┃   ┃  DOC END  ┃  MS LEFT  ┃  MS DOWN  ┃ MS RIGHT  ┃ TRANSLATE ┃
// ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
// ┃RESET(HOLD)┃  SEL LINE ┃ SEL W L   ┃   SEL W   ┃  SEL W R  ┃  SEL ALL  ┃   ┃   1PASS   ┃ ZOOM IN   ┃RESET ZOOM ┃ ZOOM OUT  ┃    HELP   ┃RESET(HOLD)┃
// ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
//                                     ┃           ┃           ┃ XXXXXXXXX ┃   ┃ XXXXXXXXX ┃           ┃           ┃
//                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
 bindings = <
// ╷           ╷           ╷           ╷           ╷           ╷           ╷   ╷           ╷           ╷           ╷           ╷           ╷           ╷

        &kp LC(LA(D)) &kp LC(LA(LEFT)) &kp LA(LC(UP)) &kp LC(LA(RIGHT)) &kp LC(LA(G))      &kp LG(UP)        &mkp MB1       &mmv MOVE_UP   &mkp MB2   &kp LG(LA(D))
        &kp LG(LA(UP)) &kp LG(LA(UP))  &kp LG(LBKT)   &kp LG(RBKT) &kp (LC(LA(LG(SPACE)))) &kp LG(DOWN)      &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &kp LG(N1)
 &bootloader &selline &kp LA(LS(LEFT)) &selword       &kp (LA(LS(RIGHT))) &kp (LG(A))      &kp LS(LG(SPACE)) &kp LG(PLUS)   &kp LG(N0)     &kp LG(MINUS) &kp LG(LS(QUESTION)) &bootloader
                                        &trans      &trans      &trans          &trans      &trans      &trans      
                        >;
                };
        };
};
